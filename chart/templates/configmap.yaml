apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kioskmanager.fullname" . }}-config
  labels:
    {{- include "kioskmanager.labels" . | nindent 4 }}
data:
  ADMIN_USERNAME: {{ .Values.adminUser | quote }}
  {{- if .Values.persistence.enabled }}
  # Ensure Django knows where the media root volume is mounted inside the container
  MEDIA_ROOT: {{ .Values.persistence.mountPath | quote }}
  {{- end }}

  {{- if .Values.ingress.tls.enabled }}
  CSRF_TRUSTED_ORIGINS: https://{{ .Values.ingress.host }}
  {{- else }}
  CSRF_TRUSTED_ORIGINS: http://{{ .Values.ingress.host }}
  {{- end }}

  # Database connection details based on whether internal or external PG is used
  {{- if .Values.postgresql.enabled }}
  DATABASE_HOST: {{ printf "%s-postgresql" .Release.Name | quote }} # Service name of the Bitnami chart
  DATABASE_PORT: "5432"
  DATABASE_NAME: {{ .Values.postgresql.auth.database | quote }}
  DATABASE_USER: {{ .Values.postgresql.auth.username | quote }}
  {{- else }}
  DATABASE_HOST: {{ required "External DB host required if postgresql.enabled=false (.Values.externalDatabase.host)" .Values.externalDatabase.host | quote }}
  DATABASE_PORT: {{ .Values.externalDatabase.port | default "5432" | quote }}
  DATABASE_NAME: {{ required "External DB name required if postgresql.enabled=false (.Values.externalDatabase.database)" .Values.externalDatabase.database | quote }}
  DATABASE_USER: {{ required "External DB user required if postgresql.enabled=false (.Values.externalDatabase.username)" .Values.externalDatabase.username | quote }}
  {{- end }}
  DJANGO_AUTH_METHOD: {{ .Values.auth.method | quote }}

  {{- if eq .Values.auth.method "oidc" }}
  # OIDC Configuration
  OIDC_ENABLED: "True" # Helper for Django settings logic, though derived from AUTH_METHOD
  OIDC_PROVIDER_NAME: {{ .Values.oidc.providerName | quote }}
  OIDC_RP_CLIENT_ID: {{ .Values.oidc.rpClientId | quote }}
  OIDC_OP_BASE_DISCOVERY_URL: {{ .Values.oidc.opBaseDiscoveryUrl | quote }}
  OIDC_OP_AUTHORIZATION_ENDPOINT: {{ .Values.oidc.opAuthorizationEndpoint | quote }}
  OIDC_OP_TOKEN_ENDPOINT: {{ .Values.oidc.opTokenEndpoint | quote }}
  OIDC_OP_USER_ENDPOINT: {{ .Values.oidc.opUserEndpoint | quote }}
  OIDC_OP_JWKS_ENDPOINT: {{ .Values.oidc.opJwksEndpoint | quote }}
  OIDC_OP_ISSUER_ENDPOINT: {{ .Values.oidc.opIssuerEndpoint | quote }}
  OIDC_RP_SIGN_ALGO: {{ .Values.oidc.rpSignAlgo | quote }}
  OIDC_RP_SCOPES: {{ .Values.oidc.rpScopes | quote }}
  OIDC_CREATE_USER: {{ .Values.oidc.createUser | quote }}
  OIDC_UPDATE_USER_ATTRIBUTES: {{ .Values.oidc.updateUserAttributes | quote }}
  OIDC_USERNAME_CLAIM: {{ .Values.oidc.usernameClaim | quote }}
  OIDC_CLAIM_FIRST_NAME: {{ .Values.oidc.claimFirstName | quote }}
  OIDC_CLAIM_LAST_NAME: {{ .Values.oidc.claimLastName | quote }}
  OIDC_CLAIM_EMAIL: {{ .Values.oidc.claimEmail | quote }}
  OIDC_GROUPS_CLAIM_NAME: {{ .Values.oidc.groupsClaimName | quote }}
  OIDC_RP_DJANGO_GROUPS_SYNC_ENABLED: {{ .Values.oidc.rpDjangoGroupsSyncEnabled | quote }}
  OIDC_RP_CREATE_NEW_GROUPS: {{ .Values.oidc.rpCreateNewGroups | quote }}
  {{- if .Values.oidc.mapStaffStatus.enabled }}
  OIDC_STAFF_CLAIM_NAME: {{ .Values.oidc.mapStaffStatus.claimName | quote }}
  OIDC_STAFF_CLAIM_VALUE: {{ .Values.oidc.mapStaffStatus.claimValue | quote }}
  {{- end }}
  {{- if .Values.oidc.mapSuperuserStatus.enabled }}
  OIDC_SUPERUSER_CLAIM_NAME: {{ .Values.oidc.mapSuperuserStatus.claimName | quote }}
  OIDC_SUPERUSER_CLAIM_VALUE: {{ .Values.oidc.mapSuperuserStatus.claimValue | quote }}
  {{- end }}
  LOGIN_REDIRECT_URL: {{ .Values.oidc.loginRedirectUrl | quote }}
  LOGOUT_REDIRECT_URL: {{ .Values.oidc.logoutRedirectUrl | quote }}
  OIDC_STATE_SIZE: {{ .Values.oidc.stateSize | quote }}
  OIDC_NONCE_SIZE: {{ .Values.oidc.nonceSize | quote }}
  {{- else }}
  OIDC_ENABLED: "False"
  {{- end }}